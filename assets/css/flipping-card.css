/* Reset default margin and padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Fullscreen body */
html, body {
  height: 100vh; /* Full viewport height */
  width: 100vw; /* Full viewport width */
  display: flex; /* Use flexbox for centering */
  justify-content: center; /* Horizontally center */
  align-items: center; /* Vertically center */
  overflow: hidden; /* Prevent scrolling */
  background-color: black; /* Background color */
}

/* Centering the card container */
.card-container {
  width: 90vw; /* Responsive width */
  max-width: 500px; /* Limit maximum width */
  aspect-ratio: 16 / 9; /* Maintain 16:9 ratio */
  perspective: 1000px; /* Required for 3D flip */
  position: relative; /* Ensures content positioning works */
  z-index: 1;
}

/* Card */
.card {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s;
}

.card-container.flipped .card {
  transform: rotateY(180deg);
}

/* Front and Back Faces */
.front, .back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.front img, .back img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensures images fill the container */
  border-radius: 10px; /* Optional rounded corners */
}

.back {
  transform: rotateY(180deg);
}

/* Floating text styles */
.floating-text {
  position: fixed; /* Floats text relative to viewport */
  font-size: 36px;
  color: rgba(255, 255, 255, 0.15); /* Subtle opacity */
  pointer-events: none; /* Prevent interaction */
  animation: float-random 12s infinite alternate ease-in-out; /* Slower and longer animation */
  z-index: 0; /* Ensure behind card */
  user-select: none; /* Prevent text selection */
}

/* Floating animation with larger and random directions */
@keyframes float-random {
  0% {
    transform: translate(0, 0); /* Start at original position */
  }
  20% {
    transform: translate(50vw, -30vh); /* Move right and slightly up */
  }
  40% {
    transform: translate(-40vw, 40vh); /* Move left and down */
  }
  60% {
    transform: translate(30vw, -50vh); /* Move right and up */
  }
  80% {
    transform: translate(-50vw, 20vh); /* Move left and slightly down */
  }
  100% {
    transform: translate(0, 0); /* Return to start */
  }
}