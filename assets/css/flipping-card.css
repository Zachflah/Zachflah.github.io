/* Center body and fullscreen */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: black;
  overflow: hidden; /* Prevents scrolling */
}

/* Card Container - Larger size */
.card-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw; /* Use 90% of the viewport width */
  height: 90vh; /* Use 90% of the viewport height */
  width: 80vw; /* Larger width relative to the viewport */
  max-width: 1000px; /* Limit max size for desktop */
  max-height: 600px; /* Limit max height */
  perspective: 1000px; /* For 3D effect */
}

/* Card */
.card {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s;
}

.card-container.flipped .card {
  transform: rotateY(180deg);
}

/* Front and Back Faces */
.front, .back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.front img, .back img {
  width: 100%;
  height: 100%;
  object-fit: contain; /* Ensure the image scales without cropping */
  border-radius: 10px; /* Optional rounded corners */
}

.back {
  transform: rotateY(180deg);
}

/* Target U and K specifically */
/* Merge K with U visually */
.merge-uk {
  display: inline-block;
  margin-left: -10px; /* Overlap with U */
  background-color: black; /* Match background to remove transparency effect */
  color: #E0E0E0; /* Same color as the rest of the text */
  mix-blend-mode: normal; /* Prevent lighter overlap */
}

/* Floating text styles */
.floating-text {
  position: fixed; /* Floats text relative to viewport */
  font-size: 36px;
  color: #D9D9D9; /* Subtle opacity */
  pointer-events: none; /* Prevent interaction */
  animation: float-random 20s infinite alternate ease-in-out; /* Slower and longer animation */
  z-index: 0; /* Ensure behind card */
  user-select: none; /* Prevent text selection */
}

/* Floating animation with larger and random directions */
@keyframes float-random {
  0% {
    transform: translate(0, 0); /* Start at original position */
  }
  20% {
    transform: translate(50vw, -30vh); /* Move right and slightly up */
  }
  40% {
    transform: translate(-40vw, 40vh); /* Move left and down */
  }
  60% {
    transform: translate(30vw, -50vh); /* Move right and up */
  }
  80% {
    transform: translate(-50vw, 20vh); /* Move left and slightly down */
  }
  100% {
    transform: translate(0, 0); /* Return to start */
  }
}